name: Deploy to Dev

on:
  push:
    branches:
      - main
      - 'releases/**'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:

  build-web-component:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
      - name: Build Web Component
        run: |
          cd web-component
          echo 'REACT_APP_BACKEND_URL=http://${{ secrets.SSH_SERVER }}' >> .env
          echo 'REACT_APP_BASE_PATH=/embeddable-chat' >> .env
          npm install
          npm run build
      - name: Upload build dir
        uses: actions/upload-artifact@v3
        with:
          name: web-component-build
          path: web-component/build
          if-no-files-found: error

  build-author-console:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
      - name: Build Author Console
        run: |
          cd author-console
          echo 'REACT_APP_BACKEND_URL=http://${{ secrets.SSH_SERVER }}' > .env
          echo 'REACT_APP_BASE_PATH=/author-console' >> .env
          npm install
          npm run build
      - name: Upload build dir
        uses: actions/upload-artifact@v3
        with:
          name: author-console-build
          path: author-console/build
          if-no-files-found: error

  build-backend:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set Up JDK 17 for x64
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Build with Gradle
        run: gradle :backend:bootJar
      - name: Upload result jar
        uses: actions/upload-artifact@v3
        with:
          name: backend-build
          path: backend/build/libs/backend-0.0.1-SNAPSHOT.jar

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build-author-console
      - build-web-component
      - build-backend
    concurrency:
      group: dev
      cancel-in-progress: false
    permissions:
      contents: read
      packages: read
    environment: dev
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4

      - name: Download web-component artifact
        uses: actions/download-artifact@v3
        with:
          name: web-component-build
          path: web-component/build
      - name: Copy web-component build dir
        run: |
          rm -rf devops/deploy/web-component
          mkdir -p devops/deploy/web-component
          cp -r web-component/build/** devops/deploy/web-component/

      - name: Download author-console artifact
        uses: actions/download-artifact@v3
        with:
          name: author-console-build
          path: author-console/build
      - name: Copy author-console build dir
        run: |
          rm -rf devops/deploy/author-console
          mkdir -p devops/deploy/author-console
          cp -r author-console/build/** devops/deploy/author-console/

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: backend-build
          path: backend/build/libs/
      - name: Copy extension jar
        run: cp backend/build/libs/backend-0.0.1-SNAPSHOT.jar devops/deploy/backend/backend.jar
      - name: Prepare .env
        run: |
          cat <<EOF > devops/deploy/.env
          COMPOSE_PROJECT_NAME='yagatalk-dev'
          COMPOSE_PROFILES='dev'
          ENVIRONMENT_NAME='dev'
          MAILDEV_WEB_USER='${{ secrets.MAILDEV_WEB_USER }}'
          MAILDEV_WEB_PASS='${{ secrets.MAILDEV_WEB_PASS }}'
          KEYCLOAK_DB_USERNAME='${{ secrets.KEYCLOAK_DB_USERNAME }}'
          KEYCLOAK_DB_PASSWORD='${{ secrets.KEYCLOAK_DB_PASSWORD }}'
          KEYCLOAK_ADMIN_USER='${{ secrets.KEYCLOAK_ADMIN_USER }}'
          KEYCLOAK_ADMIN_PASSWORD='${{ secrets.KEYCLOAK_ADMIN_PASSWORD }}'
          OPENAI_API_KEY='${{ secrets.OPENAI_API_KEY }}'
      - name: Rsync deploy
        uses: burnett01/rsync-deployments@5.2
        with:
          switches: -avzr --delete --exclude="" --include="" --filter=""
          path: devops/deploy/
          remote_path: yagatalk
          remote_host: ${{ secrets.SSH_SERVER }}
          remote_port: 22
          remote_user: ${{ secrets.SSH_USER }}
          remote_key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Run containers on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_SERVER }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            set -e
            cd yagatalk
            docker compose pull
            docker compose down backend nginx keycloak
            docker compose up -d --build --remove-orphans
            docker container prune -f
            docker image prune -f
